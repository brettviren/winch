# This is a winch config for eic-opticks for FD3
#
# 

[debian]
# Params are used for formatting other variables and templates.  A params of
# type list form a cross product.  
#release = ['bookworm','trixie']
release = ['bookworm']
image = '{kind}:{release}'
label = '{kind} {release}'

# In the future, to insert a split on OS, make base_debian, etc which become
# parent kinds for baseos.
[baseos]
parent_kind = "debian"
image = 'eo-{parent_kind}-{release}'
release = '{parent[release]}' # forward
# The template will be formated with params of this node and the parent.
containerfile = """
FROM {parent[image]}
RUN echo 'deb http://deb.debian.org/debian bookworm contrib non-free-firmware non-free' >> /etc/apt/sources.list \
    && \
    apt-get update \
    && \
    apt-get install -y \
      build-essential ca-certificates coreutils curl gfortran git gpg clang autoconf \
      lsb-release unzip zip direnv man-db emacs \
      python-is-python3 python3 python3-distutils python3-venv python3-click python3-yaml \
      nvidia-cuda-toolkit gcc-11 g++-11 tree fd-find \
    && \
    apt-get clean
RUN ln -sf /usr/bin/fdfind /usr/bin/fd
RUN curl -LsSf https://astral.sh/uv/install.sh | sh && mv /root/.local/bin/uv* /usr/local/bin/
ENTRYPOINT ["bash","--login"]
"""

[spack]
parent_kind = ["baseos"]
image = '{parent[image]}-spack'
containerfile = """
FROM {parent[image]}

RUN mkdir /spack && curl -sL https://github.com/spack/spack/archive/v0.23.1.tar.gz | tar -xzf - --strip-components 1 --directory /spack

RUN /spack/bin/spack compiler find

RUN git clone https://github.com/BNLNPPS/eic-opticks.git /tmp/eic-opticks \
    && \
    cd /tmp/eic-opticks/ \
    && \
    git checkout spack \
    && \
    cp -a spack /spack/var/spack/repos/eic-opticks \
    && \
    cd - \
    && \
    rm -rf /tmp/eic-opticks

RUN /spack/bin/spack repo add /spack/var/spack/repos/eic-opticks

# The nvcc in Debian 12 requires older gcc 11 so we explicitly add it to all specs.
RUN /spack/bin/spack install \
    --only dependencies --fail-fast --no-cache --show-log-on-error -j 10 \
    eic-opticks %gcc@11.3.0 ^optix-dev@7.7.0%gcc@11.3.0

RUN /spack/bin/spack install \
    --fail-fast --no-cache --show-log-on-error -j 10 \
    eic-opticks %gcc@11.3.0 ^optix-dev@7.7.0%gcc@11.3.0

RUN /spack/bin/spack install \
    --only dependencies --fail-fast --no-cache --show-log-on-error -j 10 \
    eic-opticks %gcc@11.3.0 ^optix-dev@8.0.0%gcc@11.3.0

RUN /spack/bin/spack install \
    --fail-fast --no-cache --show-log-on-error -j 10 \
    eic-opticks %gcc@11.3.0 ^optix-dev@8.0.0%gcc@11.3.0

RUN /spack/bin/spack install \
    --only dependencies --fail-fast --no-cache --show-log-on-error -j 10 \
    eic-opticks %gcc@11.3.0 ^optix-dev@9.0.0%gcc@11.3.0

RUN /spack/bin/spack install \
    --fail-fast --no-cache --show-log-on-error -j 10 \
    eic-opticks %gcc@11.3.0 ^optix-dev@9.0.0%gcc@11.3.0


ENTRYPOINT ["bash","--login"]
"""

[devel]
parent_kind = "spack"
image = '{parent[image]}-devel'
# image_format = "docker"         # if using SHELL
containerfile = """
FROM {parent[image]}

COPY build-eo.sh build-eo.sh
RUN bash build-eo.sh

COPY test-eo.sh test-eo.sh
RUN bash test-eo.sh



COPY dot.bashrc /root/.bashrc

ENTRYPOINT ["bash","--login"]
"""
files = { "dot.bashrc" = """
source /spack/share/spack/setup-env.sh
spack env activate eodev -p
eval "$(direnv hook bash)"  # the quotes are important here
cd /eic-opticks
""", "build-eo.sh" = """
source /spack/share/spack/setup-env.sh
spack env create eodev
spack env activate eodev -p

spack install --add eic-opticks%gcc@11.3.0 ^optix-dev@8.0.0%gcc@11.3.0 python py-pip openssl cmake

git clone https://github.com/BNLNPPS/eic-opticks.git

cd /eic-opticks

python -m pip install -e .

export OPTICKS_PREFIX=/install
export OPTICKS_HOME=/eic-opticks

cmake -S . -B $OPTICKS_PREFIX/build \
  -DCMAKE_BUILD_TYPE=Release \
  -DCMAKE_INSTALL_PREFIX=$OPTICKS_PREFIX \
  -DCMAKE_SHARED_LINKER_FLAGS_INIT=-L$SPACK_ENV/.spack-env/view/lib64 \
  -DCMAKE_EXE_LINKER_FLAGS_INIT=-L$SPACK_ENV/.spack-env/view/lib64

cmake --build $OPTICKS_PREFIX/build --parallel --target install

""", "test-eo.sh" = """#!/bin/bash
set -e

source /spack/share/spack/setup-env.sh
spack env activate eodev -p

eval "$(direnv hook bash)"  # the quotes are important here

cat << EOF > /eic-opticks/.envrc
export OPTICKS_PREFIX=/install
export OPTICKS_HOME=/eic-opticks

load_prefix $SPACK_ENV/.spack-env/view/
load_prefix /install
PATH_add /install/lib
path_add LD_LIBRARY_PATH /install/lib64
path_add LD_LIBRARY_PATH $SPACK_ENV/.spack-env/view/lib64
path_add PKG_CONFIG_PATH $SPACK_ENV/.spack-env/view/lib64/pkgconfig
export CUDA_VISIBLE_DEVICES=0
EOF

cd /eic-opticks
direnv allow

echo PATH:
echo $PATH|tr : '\n'
echo LD_LIBRARY_PATH:
echo $LD_LIBRARY_PATH|tr : '\n'

/eic-opticks/tests/test_opticks.sh || true
"""}